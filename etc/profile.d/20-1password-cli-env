# Check for interactive bash.
[ -z "$BASH_VERSION" -o -z "$PS1" -o "${BASH-no}" != "/bin/bash" ] && return

# Sets some helper functions for docker instances
which op >/dev/null && {

    # A function that simplifies logging in (I mis-type "signin" all the time)
    op() {
        local _OP="$(which op)"
        [ "${1}" == "signout" ] && {
            "${_OP}" signout &>/dev/null
            for i in $(env | grep '^OP_SESSION_' | cut -d'=' -f1); do unset "${i}"; done
            return 0
        }
        env | grep -q '^OP_SESSION_' || {
            [ "${1}" != "signin" -a "${1}" != "--help" -a "${1}" != "--version" ] && {
                local _OPCONFIG="${HOME}/.op/config"
                [ -f "${_OPCONFIG}" ] && {
                    local _OPREGEX="s/^.*\"shorthand\": \"([^\"]+)\".*$/\1/p"
                    if [ $(sed -nE "${_OPREGEX}" "${_OPCONFIG}" | wc -l) -eq 1 ]; then
                        # Save and restore our TTY so we get our keyboard back if you ctrl-c
                        local _OTTY=`stty -g 2>/dev/null`; trap 'stty ${_OTTY} 2>/dev/null; echo ""; trap - INT' INT
                        eval $("${_OP}" signin "$(sed -nE "${_OPREGEX}" "${_OPCONFIG}")")
                        env | grep -q '^OP_SESSION_' || { return 1; }
                    fi
                }
                env | grep -q '^OP_SESSION_' || { 
                    echo "Could not auto-signin, please use `op signin`" >&2
                    return 1
                }
                [ $# -eq 0 ] && { return 0; }
            }
        }
        "${_OP}" "$@"; return $?;
    }
}
