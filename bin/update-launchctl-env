#!/bin/bash
: ${TMPDIR:=/tmp}
WORK_DIR="${TMPDIR}/update-launchctl.$$"
BEFORE="${WORK_DIR}/before"
AFTER="${WORK_DIR}/after"
CHANGES="${WORK_DIR}/changes"
PIPE="${TMPDIR}/update-launchctl.${USER}"
RUNNING="${TMPDIR}/update-launchctl.pid"

function do_stop {
    if [ -p "${PIPE}" ]; then 
        echo "STOP" > "${PIPE}" &
        kill -0 $(jobs -pr) &>/dev/null && sleep 1
        rm -f "${PIPE}"
        echo "Stopped launchctl-env daemon..."
        return 0; 
    else 
        echo "Not running" >&2; 
        return 1; 
    fi
}

if [ "${1}" == "reset" ]; then 
    do_stop; 
    exit $?; 
fi
if [ "${1}" == "status" ]; then [ -p "${PIPE}" -a -f "${RUNNING}" ] && echo "RUNNING" || echo "STOPPED"; exit 0; fi

[ -p "${PIPE}" ] && { echo "update-launchctl-env is already running" >&2; exit 1; }
echo "Starting launchctl-env daemon..."

trap 'rm -rf "${WORK_DIR}"; rm -f "${RUNNING}"; rm -f "${PIPE}";' EXIT
for (( i=1; ((i-32)); i=(($i+1)) )); do trap 'do_stop' ${i}; done
mkdir -p "${WORK_DIR}" || exit $?
mkfifo "${PIPE}" || exit $?

env > "${BEFORE}"
BASH=no source /etc/profile
env > "${AFTER}"

export IFS='
'
for i in `grep -Fvf "${BEFORE}" "${AFTER}"`; do
    k="$(echo "${i}" | cut -d'=' -f1)"
    v="$(echo "${i}" | cut -d'=' -f2-)"
    o="$(launchctl getenv "${k}")"
    
    if [ -z "${o}" ]; then
        echo "launchctl unsetenv '${k}'"
    else
        echo "launchctl setenv '${k}' '${v}'"
    fi >> "${CHANGES}"    
    launchctl setenv "${k}" "${v}"
done
if [ -p "${PIPE}" ]; then
    echo "Waiting for signal"
    echo "$?" > "${RUNNING}"
    while read STATUS < "${PIPE}"; do if [ "${STATUS}" == "STOP" ]; then break; fi; done
else
    echo "Stopped during launch" >&2
fi
echo "Cleaning up..."
[ -f "${CHANGES}" ] && /bin/bash -- "${CHANGES}"
echo "Done"
